#!/usr/bin/bash

set -eoux pipefail

echo "::group::Executing install-kernel"
trap 'echo "::endgroup::"' EXIT

# create a shims to bypass kernel install triggering dracut/rpm-ostree
# seems to be minimal impact, but allows progress on build
pushd /usr/lib/kernel/install.d
mv 05-rpmostree.install 05-rpmostree.install.bak
mv 50-dracut.install 50-dracut.install.bak
printf '%s\n' '#!/bin/sh' 'exit 0' > 05-rpmostree.install
printf '%s\n' '#!/bin/sh' 'exit 0' > 50-dracut.install
chmod +x  05-rpmostree.install 50-dracut.install
popd

dnf5 -y remove --no-autoremove kernel kernel-core kernel-modules kernel-modules-core kernel-modules-extra kernel-tools kernel-tools-libs

mkdir -p /tmp/kernel-rpms

CURL=("curl" "--retry" "3" "--retry-delay" "2" "--retry-max-time" "60" "-s")

# Check for GITHUB_TOKEN in /run/secrets/GITHUB_TOKEN (Podman secret mount)
if [[ -f /run/secrets/GITHUB_TOKEN ]]; then
  GITHUB_TOKEN=$(< /run/secrets/GITHUB_TOKEN)
  echo "Using GITHUB_TOKEN from /run/secrets/GITHUB_TOKEN for authentication." >&2
  AUTH_HEADER="Authorization: Bearer $GITHUB_TOKEN"
    CURL+=("-H" "$AUTH_HEADER")
else
  echo "GITHUB_TOKEN secret not found. Using unauthenticated requests." >&2
fi

if [[ -n "$KERNEL_VERSION" && "$KERNEL_VERSION" != "latest" ]]; then
    latest="$("${CURL[@]}" "https://api.github.com/repos/bazzite-org/kernel-bazzite/releases/tags/$KERNEL_VERSION" )"
else
    latest="$("${CURL[@]}" "https://api.github.com/repos/bazzite-org/kernel-bazzite/releases/latest")"
fi

ARCH=$(uname -m)
rpm=$(jq -r '.assets[].name | match("kernel-core.*.rpm").string' <<< $latest | grep "$FEDORA_VERSION.$ARCH" | head -1)
kernel_version=$(echo -E $rpm | sed "s/kernel-core-//g;s/.rpm//g")
build_tag=$(jq -r '.tag_name' <<< "$latest")

pkgs=(
    kernel
    kernel-core
    kernel-modules
    kernel-modules-core
    kernel-modules-extra
    kernel-devel
    kernel-devel-matched
    kernel-tools
    kernel-tools-libs
    kernel-akmods
    kernel-common
)

if [[ "$IMAGE_NAME" == "*nvidia-open" || "$IMAGE_NAME" == "*-deck-nvidia*" ]]; then
    echo "Using NVIDIA Open Kernel"
    pkgs+=("kernel-nvidia")
elif [[ "$IMAGE_NAME" == "*nvidia*" ]]; then
    echo "Using NVIDIA Closed Kernel with Legacy driver"
    pkgs+=("kernel-nvidia-closed-lts")
fi

for pkg in ${pkgs{@}}; do
    ofn=/tmp/kernel-rpms/"$pkg".rpm
    url=https://github.com/bazzite-org/kernel-bazzite/releases/download/"$build_tag"/"$pkg"-"$kernel_version".rpm
    echo "Downloading $url"
    "${CURL[@]}" -L $url -o "$ofn"
    [[ -s "/tmp/kernel-rpms/$pkg.rpm" ]] || { echo "Empty download for $pkg"; exit 1; }
    # Github api not available in image - fix me
    # gh attestation verify -R bazzite-org/kernel-bazzite "$ofn" \
    #     --deny-self-hosted-runners --source-ref "refs/tags/$build_tag"
done

dnf5 -y install \
    /tmp/kernel-rpms/*.rpm

dnf5 versionlock add $pkgs

pushd /usr/lib/kernel/install.d
mv -f 05-rpmostree.install.bak 05-rpmostree.install
mv -f 50-dracut.install.bak 50-dracut.install
popd